[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Blog",
    "section": "",
    "text": "Post With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nApr 24, 2023\n\n\nHarlow Malloc\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nApr 21, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\n  \n\n\n\n\nI tried to predict the 2023 NCAA Tournament and it did not go well\n\n\n\n\n\n\n\nbasketball\n\n\nmachinelearning\n\n\nbracketology\n\n\n\n\n\n\n\n\n\n\n\nApr 25, 2022\n\n\nJack Yelden\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/ncaa-bracket-prediction-failure/index.html",
    "href": "posts/ncaa-bracket-prediction-failure/index.html",
    "title": "I tried to predict the 2023 NCAA Tournament and it did not go well",
    "section": "",
    "text": "During this semester, I have been tasked with building a Notebook of code to try and use Machine Learning to predict the March Madness tournament. As we know, it is notoriously difficult to determine which teams are going to win during the tournament, so being able to accurately predict even some games would make you a lot of money. I learned through my work that it is not as easy as it sounds to correctly predict the tournament. In the end, my model ended up predicting that Colgate would win the National Championship. Colgate was a 15 seed, meaning there were only four teams in the entire tournament that the selection committee felt were worse than Colgate. That being said, my model was supremely confident in them winning it all. They ended up losing by 20 in the first round to Texas. I think it is safe to say that my adventure in predicting the tournament was not a success, but I was still able to learn things that could end up helping me in the future.\nWe should first start by looking at my model and what I chose to use for it. I used four statistics in the model to try and predict which teams would win games. I knew that I wanted to have a shooting statistic and more specifically one that accounted for the fact that threes are worth more than twos. In the end, I settled on Effective Field Goal Percentage which places a combines 3-point field goal percentage and field goal percentage while placing a higher emphasis on 3-point field goal percentage. Using this data, I did find a general trend between better shooting and more wins, as one would expect. This graph shows that trend, comparing a team’s eFG% to their opponent’s.\n\n\nCode\nlibrary(tidyverse)\nlibrary(hoopR)\nlibrary(zoo)\nlibrary(tidymodels)\nlibrary(bonsai)\n\ngamesunbuilt &lt;- load_mbb_team_box(2015:2023)\n\nteamstats &lt;- gamesunbuilt %&gt;%\n  filter(game_date &lt; as.Date(\"2023-03-14\")) %&gt;%\n  mutate(\n    possessions = round(field_goals_attempted - offensive_rebounds + turnovers + (.475 * free_throws_attempted), digits = 0),\n    points_per_100 = (team_score/possessions)*100,\n    effective_field_goal_percent = ((field_goals_made + (0.5*three_point_field_goals_made))/field_goals_attempted),\n    blocks_steals = blocks + steals\n  ) %&gt;%\n  filter(possessions &lt;= 90 & possessions &gt;= 53)\n\nrollingteamstats &lt;- teamstats %&gt;%\n  arrange(game_date) %&gt;%\n  group_by(team_short_display_name, season) %&gt;%\n  mutate(\n    team_rolling_efg = rollmean(lag(effective_field_goal_percent, n=1), k=10, align = \"right\", fill=NA),\n    team_rolling_assists = rollmean(lag(assists, n=1), k=10, align = \"right\", fill=NA),\n    team_rolling_blocks_steals = rollmean(lag(blocks_steals, n=1), k=10, align = \"right\", fill=NA),\n    team_rolling_fouls = rollmean(lag(fouls, n=1), k=10, align = \"right\", fill=NA)\n  ) %&gt;%\n  ungroup()\n\n\nteam_side &lt;- rollingteamstats %&gt;%\n  select(\n    game_id,\n    team_id,\n    team_short_display_name,\n    opponent_team_id,\n    game_date,\n    season,\n    team_score,\n    fouls,\n    team_rolling_efg,\n    team_rolling_assists,\n    team_rolling_blocks_steals,\n    team_rolling_fouls\n    ) %&gt;%\n  na.omit() %&gt;%\n  rename(\n    team_fouls = fouls\n  )\nopponent_side &lt;- team_side %&gt;%\n  select(-opponent_team_id) %&gt;%\n  rename(\n    opponent_team_id = team_id,\n    opponent_short_display_name = team_short_display_name,\n    opponent_score = team_score,\n    opponent_fouls = team_fouls,\n    opponent_rolling_efg = team_rolling_efg,\n    opponent_rolling_assists = team_rolling_assists,\n    opponent_rolling_blocks_steals = team_rolling_blocks_steals,\n    opponent_rolling_fouls = team_rolling_fouls\n  ) \n\ngames &lt;- team_side %&gt;% inner_join(opponent_side)\n\n\ngames &lt;- games %&gt;% mutate(\n  team_result = as.factor(case_when(\n    team_score &gt; opponent_score ~ \"W\",\n    opponent_score &gt; team_score ~ \"L\"\n))) %&gt;% na.omit()\n\n\ngames$team_result &lt;- relevel(games$team_result, ref=\"W\")\n\n\nmodelgames &lt;- games %&gt;%\n  select(\n    game_id,\n    game_date,\n    team_short_display_name,\n    opponent_short_display_name,\n    season,\n    team_rolling_efg,\n    opponent_rolling_efg,\n    team_rolling_assists,\n    opponent_rolling_assists,\n    team_rolling_blocks_steals,\n    opponent_rolling_blocks_steals,\n    team_rolling_fouls,\n    opponent_rolling_fouls,\n    team_result\n    ) %&gt;% na.omit()\n\n\n\n\nCode\nggplot() + \n  geom_point(\n    data=games, aes(x=team_rolling_efg, y=opponent_rolling_efg, color=team_result)) +\n  labs(\n    title=\"Teams that are shooting better than their opponents generally win.\", \n    subtitle=\"It's not perfect, but there is a general correlation between shooting better than your opponent and winning more games\", \n    x=\"Team eFG%\", \n    y=\"Opponent eFG%\") +\n  theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank()\n    )\n\n\n\n\n\n\n\nCode\ngame_split &lt;- initial_split(modelgames, prop = .8)\ngame_train &lt;- training(game_split)\ngame_test &lt;- testing(game_split)\n\ngame_recipe &lt;-\n  recipe(team_result ~ ., data = game_train) %&gt;%\n  update_role(game_id, game_date, team_short_display_name, opponent_short_display_name, season, new_role = \"ID\") %&gt;%\n  step_normalize(all_predictors())\n\nlightgbm_mod &lt;-\n  boost_tree() %&gt;%\n  set_engine(\"lightgbm\") %&gt;%\n  set_mode(\"classification\")\n\nlightgbm_workflow &lt;-\n  workflow() %&gt;%\n  add_model(lightgbm_mod) %&gt;%\n  add_recipe(game_recipe)\n\nlightgbm_fit &lt;-\n  lightgbm_workflow %&gt;%\n  fit(data = game_train)\n\n\n\n\nCode\nrollingteamstats &lt;- teamstats %&gt;%\n  arrange(game_date) %&gt;%\n  group_by(team_short_display_name, season) %&gt;%\n  mutate(\n    team_rolling_efg = rollmean(effective_field_goal_percent, k=10, align = \"right\", fill=NA),\n    team_rolling_assists = rollmean(assists, k=10, align = \"right\", fill=NA),\n    team_rolling_blocks_steals = rollmean(blocks_steals, k=10, align = \"right\", fill=NA),\n    team_rolling_fouls = rollmean(fouls, k=10, align = \"right\", fill=NA)\n  ) %&gt;%\n  ungroup()\n\n\nteam_side &lt;- rollingteamstats %&gt;%\n  select(\n    game_id,\n    team_id,\n    team_short_display_name,\n    opponent_team_id,\n    game_date,\n    season,\n    team_score,\n    fouls,\n    team_rolling_efg,\n    team_rolling_assists,\n    team_rolling_blocks_steals,\n    team_rolling_fouls\n    ) %&gt;%\n  na.omit() %&gt;%\n  rename(\n    team_fouls = fouls\n  )\n\nopponent_side &lt;- team_side %&gt;%\n  select(-opponent_team_id) %&gt;%\n  rename(\n    opponent_id = team_id,\n    opponent_short_display_name = team_short_display_name,\n    opponent_score = team_score,\n    opponent_fouls = team_fouls,\n    opponent_rolling_efg = team_rolling_efg,\n    opponent_rolling_assists = team_rolling_assists,\n    opponent_rolling_blocks_steals = team_rolling_blocks_steals,\n    opponent_rolling_fouls = team_rolling_fouls\n  ) %&gt;%\n  mutate(\n    opponent_id = as.numeric(opponent_id)\n    )\n\ngames &lt;- team_side %&gt;% inner_join(opponent_side)\n\ngames &lt;- games %&gt;% mutate(\n  team_result = as.factor(case_when(\n    team_score &gt; opponent_score ~ \"W\",\n    opponent_score &gt; team_score ~ \"L\"\n))) %&gt;% na.omit()\n\ngames$team_result &lt;- relevel(games$team_result, ref=\"W\")\n\nmodelgames &lt;- games %&gt;%\n  select(\n    game_id,\n    game_date,\n    team_short_display_name,\n    opponent_short_display_name,\n    season,\n    team_rolling_efg,\n    opponent_rolling_efg,\n    team_rolling_assists,\n    opponent_rolling_assists,\n    team_rolling_blocks_steals,\n    opponent_rolling_blocks_steals,\n    team_rolling_fouls,\n    opponent_rolling_fouls,\n    team_result\n    ) %&gt;% na.omit()\n\n\n\n\nCode\nplayingames &lt;- tibble(\n  team_short_display_name=\"Texas A&M-CC\",\n  opponent_short_display_name=\"SE Missouri St\"\n) %&gt;% add_row(\n  team_short_display_name=\"Texas St\",\n  opponent_short_display_name=\"Fair Dickinson\"\n) %&gt;% add_row(\n  team_short_display_name=\"Arizona St\",\n  opponent_short_display_name=\"Nevada\"\n) %&gt;% add_row(\n  team_short_display_name=\"Pitt\",\n  opponent_short_display_name=\"Mississippi St\"\n) \n\nplayingames &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(playingames)\n\nplayingames &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(playingames)\n\nplayin &lt;- lightgbm_fit %&gt;%\n  predict(new_data = playingames) %&gt;%\n  bind_cols(playingames) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nplayin &lt;- lightgbm_fit %&gt;%\n  predict(new_data = playingames, type=\"prob\") %&gt;%\n  bind_cols(playin) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\nplayin\n\n\n# A tibble: 4 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 W             0.522   0.478 Texas St                Fair Dickinson            \n2 W             0.604   0.396 Pitt                    Mississippi St            \n3 L             0.432   0.568 Arizona St              Nevada                    \n4 W             0.626   0.374 Texas A&M-CC            SE Missouri St            \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\n\n\nCode\nsouthround1games &lt;- tibble(\n  team_short_display_name=\"Alabama\",\n  opponent_short_display_name=\"Texas A&M-CC\"\n) %&gt;% add_row(\n  team_short_display_name=\"Maryland\",\n  opponent_short_display_name=\"West Virginia\"\n) %&gt;% add_row(\n  team_short_display_name=\"San Diego St\",\n  opponent_short_display_name=\"Charleston\"\n) %&gt;% add_row(\n  team_short_display_name=\"Virginia\",\n  opponent_short_display_name=\"Furman\"\n) %&gt;% add_row(\n  team_short_display_name=\"Creighton\",\n  opponent_short_display_name=\"NC State\"\n) %&gt;% add_row(\n  team_short_display_name=\"Baylor\",\n  opponent_short_display_name=\"UCSB\"\n) %&gt;% add_row(\n  team_short_display_name=\"Missouri\",\n  opponent_short_display_name=\"Utah State\"\n) %&gt;% add_row(\n  team_short_display_name=\"Arizona\",\n  opponent_short_display_name=\"Princeton\"\n) \n\nsouthround1games &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(southround1games)\n\nsouthround1games &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(southround1games)\n\nsouthround1 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = southround1games) %&gt;%\n  bind_cols(southround1games) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nsouthround1 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = southround1games, type=\"prob\") %&gt;%\n  bind_cols(southround1) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\nsouthround1\n\n\n# A tibble: 8 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 L             0.459   0.541 San Diego St            Charleston                \n2 L             0.391   0.609 Virginia                Furman                    \n3 W             0.511   0.489 Creighton               NC State                  \n4 W             0.705   0.295 Arizona                 Princeton                 \n5 W             0.566   0.434 Alabama                 Texas A&M-CC              \n6 L             0.492   0.508 Baylor                  UCSB                      \n7 W             0.566   0.434 Missouri                Utah State                \n8 W             0.515   0.485 Maryland                West Virginia             \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\nCode\neastround1games &lt;- tibble(\n  team_short_display_name=\"Purdue\",\n  opponent_short_display_name=\"Fair Dickinson\"\n) %&gt;% add_row(\n  team_short_display_name=\"Memphis\",\n  opponent_short_display_name=\"FAU\"\n) %&gt;% add_row(\n  team_short_display_name=\"Duke\",\n  opponent_short_display_name=\"Oral Roberts\"\n) %&gt;% add_row(\n  team_short_display_name=\"Tennessee\",\n  opponent_short_display_name=\"Louisiana\"\n) %&gt;% add_row(\n  team_short_display_name=\"Kentucky\",\n  opponent_short_display_name=\"Providence\"\n) %&gt;% add_row(\n  team_short_display_name=\"Kansas St\",\n  opponent_short_display_name=\"Montana St\"\n) %&gt;% add_row(\n  team_short_display_name=\"Michigan St\",\n  opponent_short_display_name=\"USC\"\n) %&gt;% add_row(\n  team_short_display_name=\"Marquette\",\n  opponent_short_display_name=\"Vermont\"\n) \n\neastround1games &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(eastround1games)\n\neastround1games &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(eastround1games)\n\neastround1 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = eastround1games) %&gt;%\n  bind_cols(eastround1games) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\neastround1 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = eastround1games, type=\"prob\") %&gt;%\n  bind_cols(eastround1) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\neastround1\n\n\n# A tibble: 8 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 L             0.477   0.523 Memphis                 FAU                       \n2 L             0.420   0.580 Purdue                  Fair Dickinson            \n3 W             0.583   0.417 Tennessee               Louisiana                 \n4 W             0.645   0.355 Kansas St               Montana St                \n5 W             0.559   0.441 Duke                    Oral Roberts              \n6 L             0.419   0.581 Kentucky                Providence                \n7 L             0.433   0.567 Michigan St             USC                       \n8 L             0.339   0.661 Marquette               Vermont                   \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\nCode\nmidwestround1games &lt;- tibble(\n  team_short_display_name=\"Houston\",\n  opponent_short_display_name=\"N Kentucky\"\n) %&gt;% add_row(\n  team_short_display_name=\"Iowa\",\n  opponent_short_display_name=\"Auburn\"\n) %&gt;% add_row(\n  team_short_display_name=\"Miami\",\n  opponent_short_display_name=\"Drake\"\n) %&gt;% add_row(\n  team_short_display_name=\"Indiana\",\n  opponent_short_display_name=\"Kent State\"\n) %&gt;% add_row(\n  team_short_display_name=\"Iowa State\",\n  opponent_short_display_name=\"Pitt\"\n) %&gt;% add_row(\n  team_short_display_name=\"Xavier\",\n  opponent_short_display_name=\"Kennesaw St\"\n) %&gt;% add_row(\n  team_short_display_name=\"Texas A&M\",\n  opponent_short_display_name=\"Penn State\"\n) %&gt;% add_row(\n  team_short_display_name=\"Texas\",\n  opponent_short_display_name=\"Colgate\"\n) \n\nmidwestround1games &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(midwestround1games)\n\nmidwestround1games &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(midwestround1games)\n\nmidwestround1 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = midwestround1games) %&gt;%\n  bind_cols(midwestround1games) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nmidwestround1 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = midwestround1games, type=\"prob\") %&gt;%\n  bind_cols(midwestround1) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\nmidwestround1\n\n\n# A tibble: 8 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 W             0.613   0.387 Iowa                    Auburn                    \n2 L             0.215   0.785 Texas                   Colgate                   \n3 W             0.513   0.487 Miami                   Drake                     \n4 W             0.514   0.486 Xavier                  Kennesaw St               \n5 L             0.397   0.603 Indiana                 Kent State                \n6 W             0.501   0.499 Houston                 N Kentucky                \n7 L             0.400   0.600 Texas A&M               Penn State                \n8 L             0.340   0.660 Iowa State              Pitt                      \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\nCode\nwestround1games &lt;- tibble(\n  team_short_display_name=\"Kansas\",\n  opponent_short_display_name=\"Howard\"\n) %&gt;% add_row(\n  team_short_display_name=\"Arkansas\",\n  opponent_short_display_name=\"Illinois\"\n) %&gt;% add_row(\n  team_short_display_name=\"Saint Mary's\",\n  opponent_short_display_name=\"VCU\"\n) %&gt;% add_row(\n  team_short_display_name=\"UConn\",\n  opponent_short_display_name=\"Iona\"\n) %&gt;% add_row(\n  team_short_display_name=\"TCU\",\n  opponent_short_display_name=\"Nevada\"\n) %&gt;% add_row(\n  team_short_display_name=\"Gonzaga\",\n  opponent_short_display_name=\"Grand Canyon\"\n) %&gt;% add_row(\n  team_short_display_name=\"Northwestern\",\n  opponent_short_display_name=\"Boise St\"\n) %&gt;% add_row(\n  team_short_display_name=\"UCLA\",\n  opponent_short_display_name=\"UNC Asheville\"\n) \n\nwestround1games &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(westround1games)\n\nwestround1games &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(westround1games)\n\nwestround1 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = westround1games) %&gt;%\n  bind_cols(westround1games) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nwestround1 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = westround1games, type=\"prob\") %&gt;%\n  bind_cols(westround1) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\nwestround1\n\n\n# A tibble: 8 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 W             0.577   0.423 Northwestern            Boise St                  \n2 W             0.681   0.319 Gonzaga                 Grand Canyon              \n3 W             0.612   0.388 Kansas                  Howard                    \n4 W             0.593   0.407 Arkansas                Illinois                  \n5 L             0.472   0.528 UConn                   Iona                      \n6 W             0.541   0.459 TCU                     Nevada                    \n7 L             0.469   0.531 UCLA                    UNC Asheville             \n8 L             0.311   0.689 Saint Mary's            VCU                       \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\n\n\nCode\nmidwestround2games &lt;- tibble(\n  team_short_display_name=\"Houston\",\n  opponent_short_display_name=\"Iowa\"\n) %&gt;% add_row(\n  team_short_display_name=\"Miami\",\n  opponent_short_display_name=\"Kent State\"\n) %&gt;% add_row(\n  team_short_display_name=\"Pitt\",\n  opponent_short_display_name=\"Xavier\"\n) %&gt;% add_row(\n  team_short_display_name=\"Penn State\",\n  opponent_short_display_name=\"Colgate\"\n) \n\nmidwestround2games &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(midwestround2games)\n\nmidwestround2games &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(midwestround2games)\n\nmidwestround2 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = midwestround2games) %&gt;%\n  bind_cols(midwestround2games) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nmidwestround2 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = midwestround2games, type=\"prob\") %&gt;%\n  bind_cols(midwestround2) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\nmidwestround2\n\n\n# A tibble: 4 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 L             0.312   0.688 Penn State              Colgate                   \n2 W             0.508   0.492 Houston                 Iowa                      \n3 W             0.543   0.457 Miami                   Kent State                \n4 W             0.593   0.407 Pitt                    Xavier                    \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\nCode\nsouthround2games &lt;- tibble(\n  team_short_display_name=\"Alabama\",\n  opponent_short_display_name=\"Maryland\"\n) %&gt;% add_row(\n  team_short_display_name=\"Charleston\",\n  opponent_short_display_name=\"Furman\"\n) %&gt;% add_row(\n  team_short_display_name=\"Creighton\",\n  opponent_short_display_name=\"UCSB\"\n) %&gt;% add_row(\n  team_short_display_name=\"Utah State\",\n  opponent_short_display_name=\"Arizona\"\n) \n\nsouthround2games &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(southround2games)\n\nsouthround2games &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(southround2games)\n\nsouthround2 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = southround2games) %&gt;%\n  bind_cols(southround2games) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nsouthround2 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = southround2games, type=\"prob\") %&gt;%\n  bind_cols(southround2) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\nsouthround2\n\n\n# A tibble: 4 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 L             0.395   0.605 Utah State              Arizona                   \n2 L             0.399   0.601 Charleston              Furman                    \n3 W             0.554   0.446 Alabama                 Maryland                  \n4 W             0.595   0.405 Creighton               UCSB                      \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\nCode\nwestround2games &lt;- tibble(\n  team_short_display_name=\"Kansas\",\n  opponent_short_display_name=\"Arkansas\"\n) %&gt;% add_row(\n  team_short_display_name=\"VCU\",\n  opponent_short_display_name=\"Iona\"\n) %&gt;% add_row(\n  team_short_display_name=\"TCU\",\n  opponent_short_display_name=\"Gonzaga\"\n) %&gt;% add_row(\n  team_short_display_name=\"Northwestern\",\n  opponent_short_display_name=\"UNC Asheville\"\n) \n\nwestround2games &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(westround2games)\n\nwestround2games &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(westround2games)\n\nwestround2 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = westround2games) %&gt;%\n  bind_cols(westround2games) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nwestround2 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = westround2games, type=\"prob\") %&gt;%\n  bind_cols(westround2) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\nwestround2\n\n\n# A tibble: 4 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 W             0.504   0.496 Kansas                  Arkansas                  \n2 L             0.214   0.786 TCU                     Gonzaga                   \n3 W             0.561   0.439 VCU                     Iona                      \n4 L             0.482   0.518 Northwestern            UNC Asheville             \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\nCode\neastround2games &lt;- tibble(\n  team_short_display_name=\"Fair Dickinson\",\n  opponent_short_display_name=\"FAU\"\n) %&gt;% add_row(\n  team_short_display_name=\"Oral Roberts\",\n  opponent_short_display_name=\"Louisiana\"\n) %&gt;% add_row(\n  team_short_display_name=\"Providence\",\n  opponent_short_display_name=\"Montana St\"\n) %&gt;% add_row(\n  team_short_display_name=\"USC\",\n  opponent_short_display_name=\"Vermont\"\n) \n\neastround2games &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(eastround2games)\n\neastround2games &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(eastround2games)\n\neastround2 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = eastround2games) %&gt;%\n  bind_cols(eastround2games) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\neastround2 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = eastround2games, type=\"prob\") %&gt;%\n  bind_cols(eastround2) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\neastround2\n\n\n# A tibble: 4 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 L             0.347   0.653 Fair Dickinson          FAU                       \n2 W             0.732   0.268 Oral Roberts            Louisiana                 \n3 W             0.638   0.362 Providence              Montana St                \n4 L             0.233   0.767 USC                     Vermont                   \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\n\n\nCode\nmidwestround3games &lt;- tibble(\n  team_short_display_name=\"Houston\",\n  opponent_short_display_name=\"Miami\"\n) %&gt;% add_row(\n  team_short_display_name=\"Xavier\",\n  opponent_short_display_name=\"Colgate\"\n) \n\nmidwestround3games &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(midwestround3games)\n\nmidwestround3games &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(midwestround3games)\n\nmidwestround3 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = midwestround3games) %&gt;%\n  bind_cols(midwestround3games) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nmidwestround3 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = midwestround3games, type=\"prob\") %&gt;%\n  bind_cols(midwestround3) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\nmidwestround3\n\n\n# A tibble: 2 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 L             0.246   0.754 Xavier                  Colgate                   \n2 L             0.456   0.544 Houston                 Miami                     \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\nCode\nsouthround3games &lt;- tibble(\n  team_short_display_name=\"Alabama\",\n  opponent_short_display_name=\"Furman\"\n) %&gt;% add_row(\n  team_short_display_name=\"UCSB\",\n  opponent_short_display_name=\"Arizona\"\n) \n\nsouthround3games &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(southround3games)\n\nsouthround3games &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(southround3games)\n\nsouthround3 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = southround3games) %&gt;%\n  bind_cols(southround3games) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nsouthround3 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = southround3games, type=\"prob\") %&gt;%\n  bind_cols(southround3) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\nsouthround3\n\n\n# A tibble: 2 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 L             0.438   0.562 UCSB                    Arizona                   \n2 L             0.390   0.610 Alabama                 Furman                    \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\nCode\nwestround3games &lt;- tibble(\n  team_short_display_name=\"Kansas\",\n  opponent_short_display_name=\"Iona\"\n) %&gt;% add_row(\n  team_short_display_name=\"Gonzaga\",\n  opponent_short_display_name=\"UNC Asheville\"\n) \n\nwestround3games &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(westround3games)\n\nwestround3games &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(westround3games)\n\nwestround3 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = westround3games) %&gt;%\n  bind_cols(westround3games) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nwestround3 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = westround3games, type=\"prob\") %&gt;%\n  bind_cols(westround3) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\nwestround3\n\n\n# A tibble: 2 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 L             0.468   0.532 Kansas                  Iona                      \n2 W             0.672   0.328 Gonzaga                 UNC Asheville             \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\nCode\neastround3games &lt;- tibble(\n  team_short_display_name=\"FAU\",\n  opponent_short_display_name=\"Oral Roberts\"\n) %&gt;% add_row(\n  team_short_display_name=\"Providence\",\n  opponent_short_display_name=\"Vermont\"\n) \n\neastround3games &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(eastround3games)\n\neastround3games &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(eastround3games)\n\neastround3 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = eastround3games) %&gt;%\n  bind_cols(eastround3games) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\neastround3 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = eastround3games, type=\"prob\") %&gt;%\n  bind_cols(eastround3) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\neastround3\n\n\n# A tibble: 2 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 L             0.467   0.533 FAU                     Oral Roberts              \n2 L             0.149   0.851 Providence              Vermont                   \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\n\n\nCode\nmidwestround4games &lt;- tibble(\n  team_short_display_name=\"Miami\",\n  opponent_short_display_name=\"Colgate\"\n) \n\nmidwestround4games &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(midwestround4games)\n\nmidwestround4games &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(midwestround4games)\n\nmidwestround4 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = midwestround4games) %&gt;%\n  bind_cols(midwestround4games) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nmidwestround4 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = midwestround4games, type=\"prob\") %&gt;%\n  bind_cols(midwestround4) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\nmidwestround4\n\n\n# A tibble: 1 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 L             0.434   0.566 Miami                   Colgate                   \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\nCode\nsouthround4games &lt;- tibble(\n  team_short_display_name=\"Furman\",\n  opponent_short_display_name=\"Arizona\"\n) \n\nsouthround4games &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(southround4games)\n\nsouthround4games &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(southround4games)\n\nsouthround4 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = southround4games) %&gt;%\n  bind_cols(southround4games) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nsouthround4 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = southround4games, type=\"prob\") %&gt;%\n  bind_cols(southround4) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\nsouthround4\n\n\n# A tibble: 1 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 W             0.510   0.490 Furman                  Arizona                   \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\nCode\nwestround4games &lt;- tibble(\n  team_short_display_name=\"Iona\",\n  opponent_short_display_name=\"Gonzaga\"\n) \n\nwestround4games &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(westround4games)\n\nwestround4games &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(westround4games)\n\nwestround4 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = westround4games) %&gt;%\n  bind_cols(westround4games) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nwestround4 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = westround4games, type=\"prob\") %&gt;%\n  bind_cols(westround4) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\nwestround4\n\n\n# A tibble: 1 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 L             0.327   0.673 Iona                    Gonzaga                   \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\nCode\neastround4games &lt;- tibble(\n  team_short_display_name=\"Oral Roberts\",\n  opponent_short_display_name=\"Vermont\"\n) \n\neastround4games &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(eastround4games)\n\neastround4games &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(eastround4games)\n\neastround4 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = eastround4games) %&gt;%\n  bind_cols(eastround4games) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\neastround4 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = eastround4games, type=\"prob\") %&gt;%\n  bind_cols(eastround4) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\neastround4\n\n\n# A tibble: 1 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 L             0.465   0.535 Oral Roberts            Vermont                   \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\n\n\nCode\nfinalfourgames &lt;- tibble(\n  team_short_display_name=\"Arizona\",\n  opponent_short_display_name=\"Vermont\"\n) %&gt;% add_row(\n  team_short_display_name=\"Colgate\",\n  opponent_short_display_name=\"Iona\"\n) \n\nfinalfourgames &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(finalfourgames)\n\nfinalfourgames &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(finalfourgames)\n\nfinalfour &lt;- lightgbm_fit %&gt;%\n  predict(new_data = finalfourgames) %&gt;%\n  bind_cols(finalfourgames) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nfinalfour &lt;- lightgbm_fit %&gt;%\n  predict(new_data = finalfourgames, type=\"prob\") %&gt;%\n  bind_cols(finalfour) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\nfinalfour\n\n\n# A tibble: 2 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 W             0.555   0.445 Colgate                 Iona                      \n2 L             0.340   0.660 Arizona                 Vermont                   \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\nCode\nchampionshipgames &lt;- tibble(\n  team_short_display_name=\"Colgate\",\n  opponent_short_display_name=\"Vermont\"\n) \n\nchampionshipgames &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(championshipgames)\n\nchampionshipgames &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(championshipgames)\n\nchampionship &lt;- lightgbm_fit %&gt;%\n  predict(new_data = championshipgames) %&gt;%\n  bind_cols(championshipgames) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nchampionship &lt;- lightgbm_fit %&gt;%\n  predict(new_data = championshipgames, type=\"prob\") %&gt;%\n  bind_cols(championship) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\nchampionship\n\n\n# A tibble: 1 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 L             0.411   0.589 Colgate                 Vermont                   \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  }
]