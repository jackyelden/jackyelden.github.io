[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Blog",
    "section": "",
    "text": "Post With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nApr 24, 2023\n\n\nHarlow Malloc\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nApr 21, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\n  \n\n\n\n\nI tried to predict the 2023 NCAA Tournament and it did not go well\n\n\n\n\n\n\n\nbasketball\n\n\nmachinelearning\n\n\nbracketology\n\n\n\n\n\n\n\n\n\n\n\nApr 24, 2022\n\n\nJack Yelden\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/ncaa-bracket-prediction-failure/NCAABracketforBlog.html",
    "href": "posts/ncaa-bracket-prediction-failure/NCAABracketforBlog.html",
    "title": "Jack Yelden's Blog",
    "section": "",
    "text": "SPMC 460 NCAA Prediction Model\n\nYour reasoning for choosing the things that you did to measure what makes a basketball team good.\n\nFor my model, I selected to use four different statistics to try and predict the games. Firstly, I wanted something related to a teams efficiency so I decided to use Effective Field Goal Percentage. Effective Field Goal Percentage factors in the idea that threes are worth more than twos, so I wanted to include it. Next, I chose to use assists. Assists show how well a team can distribute the ball and create open looks. Next, I created a number that was just a team’s blocks plus steals. This stat is meant to represent how many times a team is stopping the opposing team from getting a good look. Lastly, I knew I wanted to do something with fouls and I tested out a couple metrics, but in the end just a rolling mean of a team’s fouls was the most accurate on the training and testing data. I also used a 10 game rolling mean for all of the stats because I felt like that accounted for teams that could be streaking at the end of the season after a slow start.\n\nThe implementation of your feature engineering (the stuff that feeds modelgames).\nThe justification of your model choice.\n\nI chose to use LightGBM as my model because it was very similar in accuracy on the training data to Logistic Regression and SVM, but it held up better when I started to use the testing data. I also did not want to use XGBoost because of the time commitment that it would have taken to run it every time. When I was playing around with my metrics, XGBoost would have taken too long to make it feasible.\n\nThe implementation of your model and predictions.\n\n\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0     ✔ purrr   1.0.1\n✔ tibble  3.2.1     ✔ dplyr   1.1.2\n✔ tidyr   1.3.0     ✔ stringr 1.5.0\n✔ readr   2.1.3     ✔ forcats 1.0.0\n\n\nWarning: package 'tibble' was built under R version 4.2.3\n\n\nWarning: package 'dplyr' was built under R version 4.2.3\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(hoopR)\nlibrary(zoo)\n\n\nAttaching package: 'zoo'\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\nlibrary(tidymodels)\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.0.0 ──\n✔ broom        1.0.3     ✔ rsample      1.1.1\n✔ dials        1.1.0     ✔ tune         1.0.1\n✔ infer        1.0.4     ✔ workflows    1.1.2\n✔ modeldata    1.1.0     ✔ workflowsets 1.0.0\n✔ parsnip      1.0.3     ✔ yardstick    1.1.0\n✔ recipes      1.0.4     \n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Use suppressPackageStartupMessages() to eliminate package startup messages\n\nlibrary(bonsai)\n\n\ngamesunbuilt &lt;- load_mbb_team_box(2015:2023)\n\nteamstats &lt;- gamesunbuilt %&gt;%\n  filter(game_date &lt; as.Date(\"2023-03-14\")) %&gt;%\n  mutate(\n    possessions = round(field_goals_attempted - offensive_rebounds + turnovers + (.475 * free_throws_attempted), digits = 0),\n    points_per_100 = (team_score/possessions)*100,\n    effective_field_goal_percent = ((field_goals_made + (0.5*three_point_field_goals_made))/field_goals_attempted),\n    blocks_steals = blocks + steals\n  ) %&gt;%\n  filter(possessions &lt;= 90 & possessions &gt;= 53)\n\nrollingteamstats &lt;- teamstats %&gt;%\n  arrange(game_date) %&gt;%\n  group_by(team_short_display_name, season) %&gt;%\n  mutate(\n    team_rolling_efg = rollmean(lag(effective_field_goal_percent, n=1), k=10, align = \"right\", fill=NA),\n    team_rolling_assists = rollmean(lag(assists, n=1), k=10, align = \"right\", fill=NA),\n    team_rolling_blocks_steals = rollmean(lag(blocks_steals, n=1), k=10, align = \"right\", fill=NA),\n    team_rolling_fouls = rollmean(lag(fouls, n=1), k=10, align = \"right\", fill=NA)\n  ) %&gt;%\n  ungroup()\n\n\nteam_side &lt;- rollingteamstats %&gt;%\n  select(\n    game_id,\n    team_id,\n    team_short_display_name,\n    opponent_team_id,\n    game_date,\n    season,\n    team_score,\n    fouls,\n    team_rolling_efg,\n    team_rolling_assists,\n    team_rolling_blocks_steals,\n    team_rolling_fouls\n    ) %&gt;%\n  na.omit() %&gt;%\n  rename(\n    team_fouls = fouls\n  )\nopponent_side &lt;- team_side %&gt;%\n  select(-opponent_team_id) %&gt;%\n  rename(\n    opponent_team_id = team_id,\n    opponent_short_display_name = team_short_display_name,\n    opponent_score = team_score,\n    opponent_fouls = team_fouls,\n    opponent_rolling_efg = team_rolling_efg,\n    opponent_rolling_assists = team_rolling_assists,\n    opponent_rolling_blocks_steals = team_rolling_blocks_steals,\n    opponent_rolling_fouls = team_rolling_fouls\n  ) \n\ngames &lt;- team_side %&gt;% inner_join(opponent_side)\n\nJoining with `by = join_by(game_id, opponent_team_id, game_date, season)`\n\ngames &lt;- games %&gt;% mutate(\n  team_result = as.factor(case_when(\n    team_score &gt; opponent_score ~ \"W\",\n    opponent_score &gt; team_score ~ \"L\"\n))) %&gt;% na.omit()\n\n\ngames$team_result &lt;- relevel(games$team_result, ref=\"W\")\n\n\nmodelgames &lt;- games %&gt;%\n  select(\n    game_id,\n    game_date,\n    team_short_display_name,\n    opponent_short_display_name,\n    season,\n    team_rolling_efg,\n    opponent_rolling_efg,\n    team_rolling_assists,\n    opponent_rolling_assists,\n    team_rolling_blocks_steals,\n    opponent_rolling_blocks_steals,\n    team_rolling_fouls,\n    opponent_rolling_fouls,\n    team_result\n    ) %&gt;% na.omit()\n\n\ngame_split &lt;- initial_split(modelgames, prop = .8)\ngame_train &lt;- training(game_split)\ngame_test &lt;- testing(game_split)\n\ngame_recipe &lt;-\n  recipe(team_result ~ ., data = game_train) %&gt;%\n  update_role(game_id, game_date, team_short_display_name, opponent_short_display_name, season, new_role = \"ID\") %&gt;%\n  step_normalize(all_predictors())\n\nlightgbm_mod &lt;-\n  boost_tree() %&gt;%\n  set_engine(\"lightgbm\") %&gt;%\n  set_mode(\"classification\")\n\nlightgbm_workflow &lt;-\n  workflow() %&gt;%\n  add_model(lightgbm_mod) %&gt;%\n  add_recipe(game_recipe)\n\nlightgbm_fit &lt;-\n  lightgbm_workflow %&gt;%\n  fit(data = game_train)\n\nTraining Accuracy - 69.6 Testing Accuracy - 62.1\n\nrollingteamstats &lt;- teamstats %&gt;%\n  arrange(game_date) %&gt;%\n  group_by(team_short_display_name, season) %&gt;%\n  mutate(\n    team_rolling_efg = rollmean(effective_field_goal_percent, k=10, align = \"right\", fill=NA),\n    team_rolling_assists = rollmean(assists, k=10, align = \"right\", fill=NA),\n    team_rolling_blocks_steals = rollmean(blocks_steals, k=10, align = \"right\", fill=NA),\n    team_rolling_fouls = rollmean(fouls, k=10, align = \"right\", fill=NA)\n  ) %&gt;%\n  ungroup()\n\n\nteam_side &lt;- rollingteamstats %&gt;%\n  select(\n    game_id,\n    team_id,\n    team_short_display_name,\n    opponent_team_id,\n    game_date,\n    season,\n    team_score,\n    fouls,\n    team_rolling_efg,\n    team_rolling_assists,\n    team_rolling_blocks_steals,\n    team_rolling_fouls\n    ) %&gt;%\n  na.omit() %&gt;%\n  rename(\n    team_fouls = fouls\n  )\n\nopponent_side &lt;- team_side %&gt;%\n  select(-opponent_team_id) %&gt;%\n  rename(\n    opponent_id = team_id,\n    opponent_short_display_name = team_short_display_name,\n    opponent_score = team_score,\n    opponent_fouls = team_fouls,\n    opponent_rolling_efg = team_rolling_efg,\n    opponent_rolling_assists = team_rolling_assists,\n    opponent_rolling_blocks_steals = team_rolling_blocks_steals,\n    opponent_rolling_fouls = team_rolling_fouls\n  ) %&gt;%\n  mutate(\n    opponent_id = as.numeric(opponent_id)\n    )\n\ngames &lt;- team_side %&gt;% inner_join(opponent_side)\n\nJoining with `by = join_by(game_id, game_date, season)`\n\n\nWarning in inner_join(., opponent_side): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 19 of `x` matches multiple rows in `y`.\nℹ Row 19 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\ngames &lt;- games %&gt;% mutate(\n  team_result = as.factor(case_when(\n    team_score &gt; opponent_score ~ \"W\",\n    opponent_score &gt; team_score ~ \"L\"\n))) %&gt;% na.omit()\n\ngames$team_result &lt;- relevel(games$team_result, ref=\"W\")\n\nmodelgames &lt;- games %&gt;%\n  select(\n    game_id,\n    game_date,\n    team_short_display_name,\n    opponent_short_display_name,\n    season,\n    team_rolling_efg,\n    opponent_rolling_efg,\n    team_rolling_assists,\n    opponent_rolling_assists,\n    team_rolling_blocks_steals,\n    opponent_rolling_blocks_steals,\n    team_rolling_fouls,\n    opponent_rolling_fouls,\n    team_result\n    ) %&gt;% na.omit()\n\n\nplayingames &lt;- tibble(\n  team_short_display_name=\"Texas A&M-CC\",\n  opponent_short_display_name=\"SE Missouri St\"\n) %&gt;% add_row(\n  team_short_display_name=\"Texas St\",\n  opponent_short_display_name=\"Fair Dickinson\"\n) %&gt;% add_row(\n  team_short_display_name=\"Arizona St\",\n  opponent_short_display_name=\"Nevada\"\n) %&gt;% add_row(\n  team_short_display_name=\"Pitt\",\n  opponent_short_display_name=\"Mississippi St\"\n) \n\nplayingames &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(playingames)\n\nJoining with `by = join_by(team_short_display_name)`\n\nplayingames &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(playingames)\n\nJoining with `by = join_by(opponent_short_display_name)`\n\nplayin &lt;- lightgbm_fit %&gt;%\n  predict(new_data = playingames) %&gt;%\n  bind_cols(playingames) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nplayin &lt;- lightgbm_fit %&gt;%\n  predict(new_data = playingames, type=\"prob\") %&gt;%\n  bind_cols(playin) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\nplayin\n\n# A tibble: 4 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 L             0.467   0.533 Texas St                Fair Dickinson            \n2 W             0.595   0.405 Pitt                    Mississippi St            \n3 L             0.416   0.584 Arizona St              Nevada                    \n4 W             0.626   0.374 Texas A&M-CC            SE Missouri St            \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\n\nsouthround1games &lt;- tibble(\n  team_short_display_name=\"Alabama\",\n  opponent_short_display_name=\"Texas A&M-CC\"\n) %&gt;% add_row(\n  team_short_display_name=\"Maryland\",\n  opponent_short_display_name=\"West Virginia\"\n) %&gt;% add_row(\n  team_short_display_name=\"San Diego St\",\n  opponent_short_display_name=\"Charleston\"\n) %&gt;% add_row(\n  team_short_display_name=\"Virginia\",\n  opponent_short_display_name=\"Furman\"\n) %&gt;% add_row(\n  team_short_display_name=\"Creighton\",\n  opponent_short_display_name=\"NC State\"\n) %&gt;% add_row(\n  team_short_display_name=\"Baylor\",\n  opponent_short_display_name=\"UCSB\"\n) %&gt;% add_row(\n  team_short_display_name=\"Missouri\",\n  opponent_short_display_name=\"Utah State\"\n) %&gt;% add_row(\n  team_short_display_name=\"Arizona\",\n  opponent_short_display_name=\"Princeton\"\n) \n\nsouthround1games &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(southround1games)\n\nJoining with `by = join_by(team_short_display_name)`\n\nsouthround1games &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(southround1games)\n\nJoining with `by = join_by(opponent_short_display_name)`\n\nsouthround1 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = southround1games) %&gt;%\n  bind_cols(southround1games) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nsouthround1 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = southround1games, type=\"prob\") %&gt;%\n  bind_cols(southround1) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\nsouthround1\n\n# A tibble: 8 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 L             0.421   0.579 San Diego St            Charleston                \n2 L             0.348   0.652 Virginia                Furman                    \n3 W             0.531   0.469 Creighton               NC State                  \n4 W             0.723   0.277 Arizona                 Princeton                 \n5 W             0.506   0.494 Alabama                 Texas A&M-CC              \n6 L             0.435   0.565 Baylor                  UCSB                      \n7 W             0.555   0.445 Missouri                Utah State                \n8 W             0.501   0.499 Maryland                West Virginia             \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\n\neastround1games &lt;- tibble(\n  team_short_display_name=\"Purdue\",\n  opponent_short_display_name=\"Fair Dickinson\"\n) %&gt;% add_row(\n  team_short_display_name=\"Memphis\",\n  opponent_short_display_name=\"FAU\"\n) %&gt;% add_row(\n  team_short_display_name=\"Duke\",\n  opponent_short_display_name=\"Oral Roberts\"\n) %&gt;% add_row(\n  team_short_display_name=\"Tennessee\",\n  opponent_short_display_name=\"Louisiana\"\n) %&gt;% add_row(\n  team_short_display_name=\"Kentucky\",\n  opponent_short_display_name=\"Providence\"\n) %&gt;% add_row(\n  team_short_display_name=\"Kansas St\",\n  opponent_short_display_name=\"Montana St\"\n) %&gt;% add_row(\n  team_short_display_name=\"Michigan St\",\n  opponent_short_display_name=\"USC\"\n) %&gt;% add_row(\n  team_short_display_name=\"Marquette\",\n  opponent_short_display_name=\"Vermont\"\n) \n\neastround1games &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(eastround1games)\n\nJoining with `by = join_by(team_short_display_name)`\n\neastround1games &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(eastround1games)\n\nJoining with `by = join_by(opponent_short_display_name)`\n\neastround1 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = eastround1games) %&gt;%\n  bind_cols(eastround1games) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\neastround1 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = eastround1games, type=\"prob\") %&gt;%\n  bind_cols(eastround1) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\neastround1\n\n# A tibble: 8 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 W             0.505   0.495 Memphis                 FAU                       \n2 L             0.412   0.588 Purdue                  Fair Dickinson            \n3 W             0.616   0.384 Tennessee               Louisiana                 \n4 W             0.616   0.384 Kansas St               Montana St                \n5 W             0.518   0.482 Duke                    Oral Roberts              \n6 L             0.393   0.607 Kentucky                Providence                \n7 L             0.470   0.530 Michigan St             USC                       \n8 L             0.253   0.747 Marquette               Vermont                   \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\n\nmidwestround1games &lt;- tibble(\n  team_short_display_name=\"Houston\",\n  opponent_short_display_name=\"N Kentucky\"\n) %&gt;% add_row(\n  team_short_display_name=\"Iowa\",\n  opponent_short_display_name=\"Auburn\"\n) %&gt;% add_row(\n  team_short_display_name=\"Miami\",\n  opponent_short_display_name=\"Drake\"\n) %&gt;% add_row(\n  team_short_display_name=\"Indiana\",\n  opponent_short_display_name=\"Kent State\"\n) %&gt;% add_row(\n  team_short_display_name=\"Iowa State\",\n  opponent_short_display_name=\"Pitt\"\n) %&gt;% add_row(\n  team_short_display_name=\"Xavier\",\n  opponent_short_display_name=\"Kennesaw St\"\n) %&gt;% add_row(\n  team_short_display_name=\"Texas A&M\",\n  opponent_short_display_name=\"Penn State\"\n) %&gt;% add_row(\n  team_short_display_name=\"Texas\",\n  opponent_short_display_name=\"Colgate\"\n) \n\nmidwestround1games &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(midwestround1games)\n\nJoining with `by = join_by(team_short_display_name)`\n\nmidwestround1games &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(midwestround1games)\n\nJoining with `by = join_by(opponent_short_display_name)`\n\nmidwestround1 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = midwestround1games) %&gt;%\n  bind_cols(midwestround1games) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nmidwestround1 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = midwestround1games, type=\"prob\") %&gt;%\n  bind_cols(midwestround1) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\nmidwestround1\n\n# A tibble: 8 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 W             0.623   0.377 Iowa                    Auburn                    \n2 L             0.266   0.734 Texas                   Colgate                   \n3 W             0.505   0.495 Miami                   Drake                     \n4 L             0.491   0.509 Xavier                  Kennesaw St               \n5 L             0.377   0.623 Indiana                 Kent State                \n6 L             0.493   0.507 Houston                 N Kentucky                \n7 L             0.367   0.633 Texas A&M               Penn State                \n8 L             0.308   0.692 Iowa State              Pitt                      \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\n\nwestround1games &lt;- tibble(\n  team_short_display_name=\"Kansas\",\n  opponent_short_display_name=\"Howard\"\n) %&gt;% add_row(\n  team_short_display_name=\"Arkansas\",\n  opponent_short_display_name=\"Illinois\"\n) %&gt;% add_row(\n  team_short_display_name=\"Saint Mary's\",\n  opponent_short_display_name=\"VCU\"\n) %&gt;% add_row(\n  team_short_display_name=\"UConn\",\n  opponent_short_display_name=\"Iona\"\n) %&gt;% add_row(\n  team_short_display_name=\"TCU\",\n  opponent_short_display_name=\"Nevada\"\n) %&gt;% add_row(\n  team_short_display_name=\"Gonzaga\",\n  opponent_short_display_name=\"Grand Canyon\"\n) %&gt;% add_row(\n  team_short_display_name=\"Northwestern\",\n  opponent_short_display_name=\"Boise St\"\n) %&gt;% add_row(\n  team_short_display_name=\"UCLA\",\n  opponent_short_display_name=\"UNC Asheville\"\n) \n\nwestround1games &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(westround1games)\n\nJoining with `by = join_by(team_short_display_name)`\n\nwestround1games &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(westround1games)\n\nJoining with `by = join_by(opponent_short_display_name)`\n\nwestround1 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = westround1games) %&gt;%\n  bind_cols(westround1games) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nwestround1 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = westround1games, type=\"prob\") %&gt;%\n  bind_cols(westround1) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\nwestround1\n\n# A tibble: 8 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 W             0.522   0.478 Northwestern            Boise St                  \n2 W             0.612   0.388 Gonzaga                 Grand Canyon              \n3 W             0.564   0.436 Kansas                  Howard                    \n4 W             0.574   0.426 Arkansas                Illinois                  \n5 L             0.442   0.558 UConn                   Iona                      \n6 W             0.521   0.479 TCU                     Nevada                    \n7 L             0.456   0.544 UCLA                    UNC Asheville             \n8 L             0.304   0.696 Saint Mary's            VCU                       \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\n\nmidwestround2games &lt;- tibble(\n  team_short_display_name=\"Houston\",\n  opponent_short_display_name=\"Iowa\"\n) %&gt;% add_row(\n  team_short_display_name=\"Miami\",\n  opponent_short_display_name=\"Kent State\"\n) %&gt;% add_row(\n  team_short_display_name=\"Pitt\",\n  opponent_short_display_name=\"Xavier\"\n) %&gt;% add_row(\n  team_short_display_name=\"Penn State\",\n  opponent_short_display_name=\"Colgate\"\n) \n\nmidwestround2games &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(midwestround2games)\n\nJoining with `by = join_by(team_short_display_name)`\n\nmidwestround2games &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(midwestround2games)\n\nJoining with `by = join_by(opponent_short_display_name)`\n\nmidwestround2 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = midwestround2games) %&gt;%\n  bind_cols(midwestround2games) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nmidwestround2 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = midwestround2games, type=\"prob\") %&gt;%\n  bind_cols(midwestround2) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\nmidwestround2\n\n# A tibble: 4 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 L             0.198   0.802 Penn State              Colgate                   \n2 W             0.534   0.466 Houston                 Iowa                      \n3 L             0.498   0.502 Miami                   Kent State                \n4 W             0.528   0.472 Pitt                    Xavier                    \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\n\nsouthround2games &lt;- tibble(\n  team_short_display_name=\"Alabama\",\n  opponent_short_display_name=\"Maryland\"\n) %&gt;% add_row(\n  team_short_display_name=\"Charleston\",\n  opponent_short_display_name=\"Furman\"\n) %&gt;% add_row(\n  team_short_display_name=\"Creighton\",\n  opponent_short_display_name=\"UCSB\"\n) %&gt;% add_row(\n  team_short_display_name=\"Utah State\",\n  opponent_short_display_name=\"Arizona\"\n) \n\nsouthround2games &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(southround2games)\n\nJoining with `by = join_by(team_short_display_name)`\n\nsouthround2games &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(southround2games)\n\nJoining with `by = join_by(opponent_short_display_name)`\n\nsouthround2 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = southround2games) %&gt;%\n  bind_cols(southround2games) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nsouthround2 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = southround2games, type=\"prob\") %&gt;%\n  bind_cols(southround2) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\nsouthround2\n\n# A tibble: 4 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 L             0.332   0.668 Utah State              Arizona                   \n2 L             0.414   0.586 Charleston              Furman                    \n3 W             0.534   0.466 Alabama                 Maryland                  \n4 W             0.567   0.433 Creighton               UCSB                      \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\n\nwestround2games &lt;- tibble(\n  team_short_display_name=\"Kansas\",\n  opponent_short_display_name=\"Arkansas\"\n) %&gt;% add_row(\n  team_short_display_name=\"VCU\",\n  opponent_short_display_name=\"Iona\"\n) %&gt;% add_row(\n  team_short_display_name=\"TCU\",\n  opponent_short_display_name=\"Gonzaga\"\n) %&gt;% add_row(\n  team_short_display_name=\"Northwestern\",\n  opponent_short_display_name=\"UNC Asheville\"\n) \n\nwestround2games &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(westround2games)\n\nJoining with `by = join_by(team_short_display_name)`\n\nwestround2games &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(westround2games)\n\nJoining with `by = join_by(opponent_short_display_name)`\n\nwestround2 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = westround2games) %&gt;%\n  bind_cols(westround2games) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nwestround2 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = westround2games, type=\"prob\") %&gt;%\n  bind_cols(westround2) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\nwestround2\n\n# A tibble: 4 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 L             0.429   0.571 Kansas                  Arkansas                  \n2 L             0.231   0.769 TCU                     Gonzaga                   \n3 W             0.512   0.488 VCU                     Iona                      \n4 L             0.449   0.551 Northwestern            UNC Asheville             \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\n\neastround2games &lt;- tibble(\n  team_short_display_name=\"Fair Dickinson\",\n  opponent_short_display_name=\"FAU\"\n) %&gt;% add_row(\n  team_short_display_name=\"Oral Roberts\",\n  opponent_short_display_name=\"Louisiana\"\n) %&gt;% add_row(\n  team_short_display_name=\"Providence\",\n  opponent_short_display_name=\"Montana St\"\n) %&gt;% add_row(\n  team_short_display_name=\"USC\",\n  opponent_short_display_name=\"Vermont\"\n) \n\neastround2games &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(eastround2games)\n\nJoining with `by = join_by(team_short_display_name)`\n\neastround2games &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(eastround2games)\n\nJoining with `by = join_by(opponent_short_display_name)`\n\neastround2 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = eastround2games) %&gt;%\n  bind_cols(eastround2games) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\neastround2 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = eastround2games, type=\"prob\") %&gt;%\n  bind_cols(eastround2) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\neastround2\n\n# A tibble: 4 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 L             0.409   0.591 Fair Dickinson          FAU                       \n2 W             0.718   0.282 Oral Roberts            Louisiana                 \n3 W             0.597   0.403 Providence              Montana St                \n4 L             0.301   0.699 USC                     Vermont                   \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\n\nmidwestround3games &lt;- tibble(\n  team_short_display_name=\"Houston\",\n  opponent_short_display_name=\"Miami\"\n) %&gt;% add_row(\n  team_short_display_name=\"Xavier\",\n  opponent_short_display_name=\"Colgate\"\n) \n\nmidwestround3games &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(midwestround3games)\n\nJoining with `by = join_by(team_short_display_name)`\n\nmidwestround3games &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(midwestround3games)\n\nJoining with `by = join_by(opponent_short_display_name)`\n\nmidwestround3 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = midwestround3games) %&gt;%\n  bind_cols(midwestround3games) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nmidwestround3 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = midwestround3games, type=\"prob\") %&gt;%\n  bind_cols(midwestround3) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\nmidwestround3\n\n# A tibble: 2 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 L             0.204   0.796 Xavier                  Colgate                   \n2 L             0.434   0.566 Houston                 Miami                     \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\n\nsouthround3games &lt;- tibble(\n  team_short_display_name=\"Alabama\",\n  opponent_short_display_name=\"Furman\"\n) %&gt;% add_row(\n  team_short_display_name=\"UCSB\",\n  opponent_short_display_name=\"Arizona\"\n) \n\nsouthround3games &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(southround3games)\n\nJoining with `by = join_by(team_short_display_name)`\n\nsouthround3games &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(southround3games)\n\nJoining with `by = join_by(opponent_short_display_name)`\n\nsouthround3 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = southround3games) %&gt;%\n  bind_cols(southround3games) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nsouthround3 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = southround3games, type=\"prob\") %&gt;%\n  bind_cols(southround3) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\nsouthround3\n\n# A tibble: 2 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 L             0.337   0.663 UCSB                    Arizona                   \n2 L             0.389   0.611 Alabama                 Furman                    \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\n\nwestround3games &lt;- tibble(\n  team_short_display_name=\"Kansas\",\n  opponent_short_display_name=\"Iona\"\n) %&gt;% add_row(\n  team_short_display_name=\"Gonzaga\",\n  opponent_short_display_name=\"UNC Asheville\"\n) \n\nwestround3games &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(westround3games)\n\nJoining with `by = join_by(team_short_display_name)`\n\nwestround3games &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(westround3games)\n\nJoining with `by = join_by(opponent_short_display_name)`\n\nwestround3 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = westround3games) %&gt;%\n  bind_cols(westround3games) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nwestround3 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = westround3games, type=\"prob\") %&gt;%\n  bind_cols(westround3) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\nwestround3\n\n# A tibble: 2 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 L             0.433   0.567 Kansas                  Iona                      \n2 W             0.724   0.276 Gonzaga                 UNC Asheville             \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\n\neastround3games &lt;- tibble(\n  team_short_display_name=\"FAU\",\n  opponent_short_display_name=\"Oral Roberts\"\n) %&gt;% add_row(\n  team_short_display_name=\"Providence\",\n  opponent_short_display_name=\"Vermont\"\n) \n\neastround3games &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(eastround3games)\n\nJoining with `by = join_by(team_short_display_name)`\n\neastround3games &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(eastround3games)\n\nJoining with `by = join_by(opponent_short_display_name)`\n\neastround3 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = eastround3games) %&gt;%\n  bind_cols(eastround3games) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\neastround3 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = eastround3games, type=\"prob\") %&gt;%\n  bind_cols(eastround3) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\neastround3\n\n# A tibble: 2 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 L             0.471   0.529 FAU                     Oral Roberts              \n2 L             0.227   0.773 Providence              Vermont                   \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\n\nmidwestround4games &lt;- tibble(\n  team_short_display_name=\"Miami\",\n  opponent_short_display_name=\"Colgate\"\n) \n\nmidwestround4games &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(midwestround4games)\n\nJoining with `by = join_by(team_short_display_name)`\n\nmidwestround4games &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(midwestround4games)\n\nJoining with `by = join_by(opponent_short_display_name)`\n\nmidwestround4 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = midwestround4games) %&gt;%\n  bind_cols(midwestround4games) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nmidwestround4 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = midwestround4games, type=\"prob\") %&gt;%\n  bind_cols(midwestround4) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\nmidwestround4\n\n# A tibble: 1 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 L             0.442   0.558 Miami                   Colgate                   \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\n\nsouthround4games &lt;- tibble(\n  team_short_display_name=\"Furman\",\n  opponent_short_display_name=\"Arizona\"\n) \n\nsouthround4games &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(southround4games)\n\nJoining with `by = join_by(team_short_display_name)`\n\nsouthround4games &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(southround4games)\n\nJoining with `by = join_by(opponent_short_display_name)`\n\nsouthround4 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = southround4games) %&gt;%\n  bind_cols(southround4games) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nsouthround4 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = southround4games, type=\"prob\") %&gt;%\n  bind_cols(southround4) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\nsouthround4\n\n# A tibble: 1 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 L             0.449   0.551 Furman                  Arizona                   \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\n\nwestround4games &lt;- tibble(\n  team_short_display_name=\"Iona\",\n  opponent_short_display_name=\"Gonzaga\"\n) \n\nwestround4games &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(westround4games)\n\nJoining with `by = join_by(team_short_display_name)`\n\nwestround4games &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(westround4games)\n\nJoining with `by = join_by(opponent_short_display_name)`\n\nwestround4 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = westround4games) %&gt;%\n  bind_cols(westround4games) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nwestround4 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = westround4games, type=\"prob\") %&gt;%\n  bind_cols(westround4) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\nwestround4\n\n# A tibble: 1 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 L             0.336   0.664 Iona                    Gonzaga                   \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\n\neastround4games &lt;- tibble(\n  team_short_display_name=\"Oral Roberts\",\n  opponent_short_display_name=\"Vermont\"\n) \n\neastround4games &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(eastround4games)\n\nJoining with `by = join_by(team_short_display_name)`\n\neastround4games &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(eastround4games)\n\nJoining with `by = join_by(opponent_short_display_name)`\n\neastround4 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = eastround4games) %&gt;%\n  bind_cols(eastround4games) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\neastround4 &lt;- lightgbm_fit %&gt;%\n  predict(new_data = eastround4games, type=\"prob\") %&gt;%\n  bind_cols(eastround4) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\neastround4\n\n# A tibble: 1 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 W             0.535   0.465 Oral Roberts            Vermont                   \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\n\nfinalfourgames &lt;- tibble(\n  team_short_display_name=\"Arizona\",\n  opponent_short_display_name=\"Vermont\"\n) %&gt;% add_row(\n  team_short_display_name=\"Colgate\",\n  opponent_short_display_name=\"Iona\"\n) \n\nfinalfourgames &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(finalfourgames)\n\nJoining with `by = join_by(team_short_display_name)`\n\nfinalfourgames &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(finalfourgames)\n\nJoining with `by = join_by(opponent_short_display_name)`\n\nfinalfour &lt;- lightgbm_fit %&gt;%\n  predict(new_data = finalfourgames) %&gt;%\n  bind_cols(finalfourgames) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nfinalfour &lt;- lightgbm_fit %&gt;%\n  predict(new_data = finalfourgames, type=\"prob\") %&gt;%\n  bind_cols(finalfour) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\nfinalfour\n\n# A tibble: 2 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 W             0.526   0.474 Colgate                 Iona                      \n2 L             0.380   0.620 Arizona                 Vermont                   \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;\n\n\n\nchampionshipgames &lt;- tibble(\n  team_short_display_name=\"Colgate\",\n  opponent_short_display_name=\"Vermont\"\n) \n\nchampionshipgames &lt;- modelgames %&gt;%\n  group_by(team_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  select(-team_result, -starts_with(\"opponent\")) %&gt;%\n  right_join(championshipgames)\n\nJoining with `by = join_by(team_short_display_name)`\n\nchampionshipgames &lt;- modelgames %&gt;%\n  group_by(opponent_short_display_name) %&gt;%\n  filter(game_date == max(game_date) & season == 2023) %&gt;%\n  slice(1) %&gt;%\n  ungroup() %&gt;%\n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;%\n  right_join(championshipgames)\n\nJoining with `by = join_by(opponent_short_display_name)`\n\nchampionship &lt;- lightgbm_fit %&gt;%\n  predict(new_data = championshipgames) %&gt;%\n  bind_cols(championshipgames) %&gt;%\n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nchampionship &lt;- lightgbm_fit %&gt;%\n  predict(new_data = championshipgames, type=\"prob\") %&gt;%\n  bind_cols(championship) %&gt;%\n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\nchampionship\n\n# A tibble: 1 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  &lt;fct&gt;         &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;                     \n1 L             0.478   0.522 Colgate                 Vermont                   \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_efg &lt;dbl&gt;,\n#   opponent_rolling_assists &lt;dbl&gt;, opponent_rolling_blocks_steals &lt;dbl&gt;,\n#   opponent_rolling_fouls &lt;dbl&gt;, game_id &lt;int&gt;, game_date &lt;date&gt;,\n#   season &lt;int&gt;, team_rolling_efg &lt;dbl&gt;, team_rolling_assists &lt;dbl&gt;,\n#   team_rolling_blocks_steals &lt;dbl&gt;, team_rolling_fouls &lt;dbl&gt;"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  }
]